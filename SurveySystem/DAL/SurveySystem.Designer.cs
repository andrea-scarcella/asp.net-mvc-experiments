//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SurveySystem", "InputTypesQuestions", "InputTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.InputTypes), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Questions), true)]
[assembly: EdmRelationshipAttribute("SurveySystem", "OptionChoicesOptionGroups", "OptionChoices", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.OptionChoices), "OptionGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.OptionGroups), true)]
[assembly: EdmRelationshipAttribute("SurveySystem", "OptionGroupsQuestions", "OptionGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.OptionGroups), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Questions), true)]
[assembly: EdmRelationshipAttribute("SurveySystem", "SurveyHeadersSurveySections", "SurveyHeaders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.SurveyHeaders), "SurveySections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.SurveySections), true)]
[assembly: EdmRelationshipAttribute("SurveySystem", "OrganisationsSurveyHeaders", "Organisations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Organisations), "SurveyHeaders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.SurveyHeaders), true)]
[assembly: EdmRelationshipAttribute("SurveySystem", "SurveySectionsUserSurveySections", "SurveySections", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.SurveySections), "UserSurveySections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.UserSurveySections), true)]

#endregion

namespace DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SurveySystemContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SurveySystemContainer object using the connection string found in the 'SurveySystemContainer' section of the application configuration file.
        /// </summary>
        public SurveySystemContainer() : base("name=SurveySystemContainer", "SurveySystemContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SurveySystemContainer object.
        /// </summary>
        public SurveySystemContainer(string connectionString) : base(connectionString, "SurveySystemContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SurveySystemContainer object.
        /// </summary>
        public SurveySystemContainer(EntityConnection connection) : base(connection, "SurveySystemContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InputTypes> InputTypes
        {
            get
            {
                if ((_InputTypes == null))
                {
                    _InputTypes = base.CreateObjectSet<InputTypes>("InputTypes");
                }
                return _InputTypes;
            }
        }
        private ObjectSet<InputTypes> _InputTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Questions> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Questions>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Questions> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organisations> Organisations
        {
            get
            {
                if ((_Organisations == null))
                {
                    _Organisations = base.CreateObjectSet<Organisations>("Organisations");
                }
                return _Organisations;
            }
        }
        private ObjectSet<Organisations> _Organisations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OptionChoices> OptionChoices
        {
            get
            {
                if ((_OptionChoices == null))
                {
                    _OptionChoices = base.CreateObjectSet<OptionChoices>("OptionChoices");
                }
                return _OptionChoices;
            }
        }
        private ObjectSet<OptionChoices> _OptionChoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OptionGroups> OptionGroups
        {
            get
            {
                if ((_OptionGroups == null))
                {
                    _OptionGroups = base.CreateObjectSet<OptionGroups>("OptionGroups");
                }
                return _OptionGroups;
            }
        }
        private ObjectSet<OptionGroups> _OptionGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SurveyHeaders> SurveyHeaders
        {
            get
            {
                if ((_SurveyHeaders == null))
                {
                    _SurveyHeaders = base.CreateObjectSet<SurveyHeaders>("SurveyHeaders");
                }
                return _SurveyHeaders;
            }
        }
        private ObjectSet<SurveyHeaders> _SurveyHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SurveySections> SurveySections
        {
            get
            {
                if ((_SurveySections == null))
                {
                    _SurveySections = base.CreateObjectSet<SurveySections>("SurveySections");
                }
                return _SurveySections;
            }
        }
        private ObjectSet<SurveySections> _SurveySections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSurveySections> UserSurveySections
        {
            get
            {
                if ((_UserSurveySections == null))
                {
                    _UserSurveySections = base.CreateObjectSet<UserSurveySections>("UserSurveySections");
                }
                return _UserSurveySections;
            }
        }
        private ObjectSet<UserSurveySections> _UserSurveySections;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InputTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInputTypes(InputTypes inputTypes)
        {
            base.AddObject("InputTypes", inputTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Questions questions)
        {
            base.AddObject("Questions", questions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organisations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganisations(Organisations organisations)
        {
            base.AddObject("Organisations", organisations);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OptionChoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptionChoices(OptionChoices optionChoices)
        {
            base.AddObject("OptionChoices", optionChoices);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OptionGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptionGroups(OptionGroups optionGroups)
        {
            base.AddObject("OptionGroups", optionGroups);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SurveyHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSurveyHeaders(SurveyHeaders surveyHeaders)
        {
            base.AddObject("SurveyHeaders", surveyHeaders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SurveySections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSurveySections(SurveySections surveySections)
        {
            base.AddObject("SurveySections", surveySections);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSurveySections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSurveySections(UserSurveySections userSurveySections)
        {
            base.AddObject("UserSurveySections", userSurveySections);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="InputTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InputTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InputTypes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static InputTypes CreateInputTypes(global::System.Int32 id, global::System.String name)
        {
            InputTypes inputTypes = new InputTypes();
            inputTypes.Id = id;
            inputTypes.Name = name;
            return inputTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "InputTypesQuestions", "Questions")]
        public EntityCollection<Questions> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questions>("SurveySystem.InputTypesQuestions", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questions>("SurveySystem.InputTypesQuestions", "Questions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="OptionChoices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionChoices : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionChoices object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static OptionChoices CreateOptionChoices(global::System.Int32 id)
        {
            OptionChoices optionChoices = new OptionChoices();
            optionChoices.Id = id;
            return optionChoices;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "OptionChoicesOptionGroups", "OptionGroups")]
        public EntityCollection<OptionGroups> OptionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OptionGroups>("SurveySystem.OptionChoicesOptionGroups", "OptionGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OptionGroups>("SurveySystem.OptionChoicesOptionGroups", "OptionGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="OptionGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionGroups : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionGroups object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="optionChoicesId">Initial value of the OptionChoicesId property.</param>
        public static OptionGroups CreateOptionGroups(global::System.Int32 id, global::System.Int32 optionChoicesId)
        {
            OptionGroups optionGroups = new OptionGroups();
            optionGroups.Id = id;
            optionGroups.OptionChoicesId = optionChoicesId;
            return optionGroups;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionChoicesId
        {
            get
            {
                return _OptionChoicesId;
            }
            set
            {
                OnOptionChoicesIdChanging(value);
                ReportPropertyChanging("OptionChoicesId");
                _OptionChoicesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionChoicesId");
                OnOptionChoicesIdChanged();
            }
        }
        private global::System.Int32 _OptionChoicesId;
        partial void OnOptionChoicesIdChanging(global::System.Int32 value);
        partial void OnOptionChoicesIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "OptionChoicesOptionGroups", "OptionChoices")]
        public OptionChoices OptionChoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionChoices>("SurveySystem.OptionChoicesOptionGroups", "OptionChoices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionChoices>("SurveySystem.OptionChoicesOptionGroups", "OptionChoices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionChoices> OptionChoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionChoices>("SurveySystem.OptionChoicesOptionGroups", "OptionChoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionChoices>("SurveySystem.OptionChoicesOptionGroups", "OptionChoices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "OptionGroupsQuestions", "Questions")]
        public EntityCollection<Questions> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questions>("SurveySystem.OptionGroupsQuestions", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questions>("SurveySystem.OptionGroupsQuestions", "Questions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="Organisations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organisations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organisations object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Organisations CreateOrganisations(global::System.Int32 id, global::System.String name)
        {
            Organisations organisations = new Organisations();
            organisations.Id = id;
            organisations.Name = name;
            return organisations;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "OrganisationsSurveyHeaders", "SurveyHeaders")]
        public EntityCollection<SurveyHeaders> SurveyHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyHeaders>("SurveySystem.OrganisationsSurveyHeaders", "SurveyHeaders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyHeaders>("SurveySystem.OrganisationsSurveyHeaders", "SurveyHeaders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="Questions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Questions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Questions object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="inputTypesId">Initial value of the InputTypesId property.</param>
        /// <param name="optionGroupsId">Initial value of the OptionGroupsId property.</param>
        public static Questions CreateQuestions(global::System.Int32 id, global::System.Int32 inputTypesId, global::System.Int32 optionGroupsId)
        {
            Questions questions = new Questions();
            questions.Id = id;
            questions.InputTypesId = inputTypesId;
            questions.OptionGroupsId = optionGroupsId;
            return questions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InputTypesId
        {
            get
            {
                return _InputTypesId;
            }
            set
            {
                OnInputTypesIdChanging(value);
                ReportPropertyChanging("InputTypesId");
                _InputTypesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputTypesId");
                OnInputTypesIdChanged();
            }
        }
        private global::System.Int32 _InputTypesId;
        partial void OnInputTypesIdChanging(global::System.Int32 value);
        partial void OnInputTypesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionGroupsId
        {
            get
            {
                return _OptionGroupsId;
            }
            set
            {
                OnOptionGroupsIdChanging(value);
                ReportPropertyChanging("OptionGroupsId");
                _OptionGroupsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionGroupsId");
                OnOptionGroupsIdChanged();
            }
        }
        private global::System.Int32 _OptionGroupsId;
        partial void OnOptionGroupsIdChanging(global::System.Int32 value);
        partial void OnOptionGroupsIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "InputTypesQuestions", "InputTypes")]
        public InputTypes InputType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputTypes>("SurveySystem.InputTypesQuestions", "InputTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputTypes>("SurveySystem.InputTypesQuestions", "InputTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InputTypes> InputTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputTypes>("SurveySystem.InputTypesQuestions", "InputTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InputTypes>("SurveySystem.InputTypesQuestions", "InputTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "OptionGroupsQuestions", "OptionGroups")]
        public OptionGroups OptionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionGroups>("SurveySystem.OptionGroupsQuestions", "OptionGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionGroups>("SurveySystem.OptionGroupsQuestions", "OptionGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionGroups> OptionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionGroups>("SurveySystem.OptionGroupsQuestions", "OptionGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionGroups>("SurveySystem.OptionGroupsQuestions", "OptionGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="SurveyHeaders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SurveyHeaders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SurveyHeaders object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="organisationsId">Initial value of the OrganisationsId property.</param>
        public static SurveyHeaders CreateSurveyHeaders(global::System.Int32 id, global::System.Int32 organisationsId)
        {
            SurveyHeaders surveyHeaders = new SurveyHeaders();
            surveyHeaders.Id = id;
            surveyHeaders.OrganisationsId = organisationsId;
            return surveyHeaders;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganisationsId
        {
            get
            {
                return _OrganisationsId;
            }
            set
            {
                OnOrganisationsIdChanging(value);
                ReportPropertyChanging("OrganisationsId");
                _OrganisationsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationsId");
                OnOrganisationsIdChanged();
            }
        }
        private global::System.Int32 _OrganisationsId;
        partial void OnOrganisationsIdChanging(global::System.Int32 value);
        partial void OnOrganisationsIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "SurveyHeadersSurveySections", "SurveySections")]
        public EntityCollection<SurveySections> SurveySections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveySections>("SurveySystem.SurveyHeadersSurveySections", "SurveySections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveySections>("SurveySystem.SurveyHeadersSurveySections", "SurveySections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "OrganisationsSurveyHeaders", "Organisations")]
        public Organisations Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisations>("SurveySystem.OrganisationsSurveyHeaders", "Organisations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisations>("SurveySystem.OrganisationsSurveyHeaders", "Organisations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisations> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisations>("SurveySystem.OrganisationsSurveyHeaders", "Organisations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisations>("SurveySystem.OrganisationsSurveyHeaders", "Organisations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="SurveySections")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SurveySections : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SurveySections object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="surveyHeadersId">Initial value of the SurveyHeadersId property.</param>
        public static SurveySections CreateSurveySections(global::System.Int32 id, global::System.Int32 surveyHeadersId)
        {
            SurveySections surveySections = new SurveySections();
            surveySections.Id = id;
            surveySections.SurveyHeadersId = surveyHeadersId;
            return surveySections;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SurveyHeadersId
        {
            get
            {
                return _SurveyHeadersId;
            }
            set
            {
                OnSurveyHeadersIdChanging(value);
                ReportPropertyChanging("SurveyHeadersId");
                _SurveyHeadersId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SurveyHeadersId");
                OnSurveyHeadersIdChanged();
            }
        }
        private global::System.Int32 _SurveyHeadersId;
        partial void OnSurveyHeadersIdChanging(global::System.Int32 value);
        partial void OnSurveyHeadersIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "SurveyHeadersSurveySections", "SurveyHeaders")]
        public SurveyHeaders SurveyHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveyHeaders>("SurveySystem.SurveyHeadersSurveySections", "SurveyHeaders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveyHeaders>("SurveySystem.SurveyHeadersSurveySections", "SurveyHeaders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SurveyHeaders> SurveyHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveyHeaders>("SurveySystem.SurveyHeadersSurveySections", "SurveyHeaders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SurveyHeaders>("SurveySystem.SurveyHeadersSurveySections", "SurveyHeaders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "SurveySectionsUserSurveySections", "UserSurveySections")]
        public EntityCollection<UserSurveySections> UserSurveySections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSurveySections>("SurveySystem.SurveySectionsUserSurveySections", "UserSurveySections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSurveySections>("SurveySystem.SurveySectionsUserSurveySections", "UserSurveySections", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SurveySystem", Name="UserSurveySections")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSurveySections : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSurveySections object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="surveySectionsId">Initial value of the SurveySectionsId property.</param>
        public static UserSurveySections CreateUserSurveySections(global::System.Int32 id, global::System.Int32 surveySectionsId)
        {
            UserSurveySections userSurveySections = new UserSurveySections();
            userSurveySections.Id = id;
            userSurveySections.SurveySectionsId = surveySectionsId;
            return userSurveySections;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SurveySectionsId
        {
            get
            {
                return _SurveySectionsId;
            }
            set
            {
                OnSurveySectionsIdChanging(value);
                ReportPropertyChanging("SurveySectionsId");
                _SurveySectionsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SurveySectionsId");
                OnSurveySectionsIdChanged();
            }
        }
        private global::System.Int32 _SurveySectionsId;
        partial void OnSurveySectionsIdChanging(global::System.Int32 value);
        partial void OnSurveySectionsIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SurveySystem", "SurveySectionsUserSurveySections", "SurveySections")]
        public SurveySections SurveySection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveySections>("SurveySystem.SurveySectionsUserSurveySections", "SurveySections").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveySections>("SurveySystem.SurveySectionsUserSurveySections", "SurveySections").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SurveySections> SurveySectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveySections>("SurveySystem.SurveySectionsUserSurveySections", "SurveySections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SurveySections>("SurveySystem.SurveySectionsUserSurveySections", "SurveySections", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
